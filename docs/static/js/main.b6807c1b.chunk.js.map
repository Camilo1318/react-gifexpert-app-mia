{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","required","GifGridItem","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAiBvC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAkBfG,UAAQ,O,QCdTC,MAVf,YAAsC,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IAE1B,OACI,sBAAKC,UAAU,2CAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPHK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdN,EAFc,iDAEkCO,UAAUF,GAF5C,+DAGDG,MAAMR,GAHL,cAGdS,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVtB,kBAabY,GAba,4CAAH,sDCuBNM,EAnBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECAN,SAACA,GAAc,IAAD,EAEZrB,mBAAS,CAC/B2B,KAAM,GACNQ,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAU,WACNlB,EAASC,GACJkB,MAAK,SAAAC,GAEFH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAItB,CAACd,IAEGe,EDjBmBK,CAAapB,GAA/BM,EAFsB,EAEtBA,KAAMQ,EAFgB,EAEhBA,QAEd,OACI,qCACI,6BAAKd,IACJc,GAAW,wCACZ,qBAAKlB,UAAU,YAAf,SACKU,EAAKE,KAAI,SAACC,GAAD,OAAS,cAAC,EAAD,eAEXA,GADCA,EAAIC,aEmBdW,MA7Bf,WAAyB,IAAD,EAEgB1C,mBAAS,CAAC,uBAF1B,mBAEb2C,EAFa,KAED5C,EAFC,KAYpB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEQ4C,EAAWd,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCnBtCuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b6807c1b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories((cats) => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                required\r\n            ></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nfunction GifGridItem({ title, url }) {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","export const getGifts = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Ffa1WNHbvyn2Ab65bJxyK0AZrHFjZzUO`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React /* { useEffect, useState } */ from 'react'\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {data.map((img) => <GifGridItem\r\n                    key={img.id}\r\n                    {...img}\r\n                />)}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n","\r\nimport { useState, useEffect } from 'react';\r\nimport { getGifts } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifts(category)\r\n            .then(imgs => {\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false,\r\n                });\r\n\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nfunction GifExpertApp() {\r\n\r\n    const [categories, setCategories] = useState(['Shingeky No kiojin']);\r\n\r\n    /* const handleAdd = () => {\r\n        setCategories(['Siete Pecados Capitales', ...categories]);\r\n        //setCategories([...categories, 'Siete Pecados Capitales']);\r\n        //setCategories(cats => [...cats, 'Siete Pecados Capitales'])\r\n\r\n        // formas de a√±adir un elemento al estado anterior\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid key={category} category={category} />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}